-- Create the OTAKU database
CREATE DATABASE OTAKU;

-- Use the OTAKU database
USE OTAKU;

-- Table of customers
CREATE TABLE IF NOT EXISTS customers (
    customer_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    name CHAR(50) NOT NULL,
    email CHAR(50) NOT NULL UNIQUE,
    nick CHAR(15) NOT NULL UNIQUE,
    password CHAR(60) NOT NULL,
    birth_date DATE NOT NULL,
    gender CHAR(10) NOT NULL
   );

-- Table of products
CREATE TABLE IF NOT EXISTS products (
    product_id INT NOT NULL PRIMARY KEY AUTO,
    category_id INT NOT NULL,
    name CHAR(50) NOT NULL,
    description CHAR(100),
    price INT NOT NULL,
    FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

-- Table of sellers
CREATE TABLE IF NOT EXISTS sellers (
    seller_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    name CHAR(50) NOT NULL,
    contact CHAR(50),
    description CHAR(100)
);

-- Table of categories
CREATE TABLE IF NOT EXISTS categories (
    category_id INT NOT NULL PRIMARY KEY,
    category_name CHAR(50) NOT NULL,
    category_type CHAR(50) NOT NULL,
    description CHAR(50)
);

-- Table of shipments
CREATE TABLE IF NOT EXISTS shipments (
    shipment_id INT NOT NULL PRIMARY KEY,
    order_id INT NOT NULL,
    shipment_date DATE NOT NULL
);

-- Table of payment methods
CREATE TABLE IF NOT EXISTS payment (
    payment_method CHAR(50) NOT NULL PRIMARY KEY,
    payment_description CHAR(50) NOT NULL,
    expiration_date DATE
);

-- Table of cart orders
CREATE TABLE IF NOT EXISTS cart_orders (
    order_id INT NOT NULL PRIMARY KEY,
    customer_id INT NOT NULL,
    product_id INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Table of shopping orders
CREATE TABLE IF NOT EXISTS shopping_orders (
    order_id INT NOT NULL PRIMARY KEY,
    customer_id INT NOT NULL,
    payment_id INT NOT NULL,
    product_id INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (payment_id) REFERENCES payment(payment_method),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

